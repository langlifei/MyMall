<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.znuel.mall.Dao.OrderItemMapper">
    <resultMap id="BaseResultMap" type="com.znuel.mall.Entities.OrderItem">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="OID" property="OID" jdbcType="INTEGER"/>
        <result column="PID" property="PID" jdbcType="INTEGER"/>
        <result column="product_attr" property="product_attr" jdbcType="VARCHAR"/>
        <result column="productNumber" property="productNumber" jdbcType="INTEGER"/>
        <result column="productTotalAmount" property="productTotalAmount" jdbcType="DOUBLE"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID, OID, PID, product_attr,productNumber,productTotalAmount
    </sql>
    <select id="insertItemBatch">
        insert into order_item(OID,PID,product_attr,productNumber,productTotalAmount)
        values
        <foreach collection="orderItems" item="item" index="index" separator=",">
            (#{item.OID},#{item.PID},#{item.product_attr},#{item.productNumber},#{item.productTotalAmount})
        </foreach>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from order_item
        where ID = #{ID,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from order_item
        where ID = #{ID,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.znuel.mall.Entities.OrderItem">
        insert into order_item (ID, OID, PID,
        product_attr,productNumber,productTotalAmount)
        values (#{ID,jdbcType=INTEGER}, #{OID,jdbcType=INTEGER}, #{PID,jdbcType=INTEGER},
        #{product_attr,jdbcType=VARCHAR},
        #{productNumber,jdbcType=INTEGER},
        #{productTotalAmount,jdbcType=DOUBLE})
    </insert>
    <insert id="insertSelective" parameterType="com.znuel.mall.Entities.OrderItem">
        insert into order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ID != null">
                ID,
            </if>
            <if test="OID != null">
                OID,
            </if>
            <if test="PID != null">
                PID,
            </if>
            <if test="product_attr != null">
                product_attr,
            </if>
            <if test="productNumber != null">
                productNumber,
            </if>
            <if test="productTotalAmount != null">
                productTotalAmount,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ID != null">
                #{ID,jdbcType=INTEGER},
            </if>
            <if test="OID != null">
                #{OID,jdbcType=INTEGER},
            </if>
            <if test="PID != null">
                #{PID,jdbcType=INTEGER},
            </if>
            <if test="product_attr != null">
                #{product_attr,jdbcType=VARCHAR},
            </if>
            <if test="productNumber != null">
                #{productNumber,jdbcType=INTEGER},
            </if>
            <if test="productTotalAmount != null">
                #{productTotalAmount,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.znuel.mall.Entities.OrderItem">
        update order_item
        <set>
            <if test="OID != null">
                OID = #{OID,jdbcType=INTEGER},
            </if>
            <if test="PID != null">
                PID = #{PID,jdbcType=INTEGER},
            </if>
            <if test="product_attr != null">
                product_attr = #{product_attr,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{ID,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.znuel.mall.Entities.OrderItem">
        update order_item
        set OID = #{OID,jdbcType=INTEGER},
        PID = #{PID,jdbcType=INTEGER},
        product_attr = #{product_attr,jdbcType=VARCHAR}
        where ID = #{ID,jdbcType=INTEGER}
    </update>
</mapper>